// <auto-generated />
using System;
using Final_Project_Group_10.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Project_Group_10.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Final_Project_Group_10.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Final_Project_Group_10.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            Description = "Large conference room with projector and whiteboard",
                            IsAvailable = true,
                            Location = "Building 1, Floor 2",
                            Name = "Conference Room A"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 6,
                            Description = "Quiet study room perfect for small groups",
                            IsAvailable = true,
                            Location = "Library, Floor 1",
                            Name = "Study Room 101"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 100,
                            Description = "Large lecture hall with audio/video equipment",
                            IsAvailable = true,
                            Location = "Building 3, Floor 1",
                            Name = "Lecture Hall B"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 10,
                            Description = "Meeting room with video conferencing capabilities",
                            IsAvailable = true,
                            Location = "Building 2, Floor 3",
                            Name = "Meeting Room C"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 30,
                            Description = "Hands-on workshop space with workbenches",
                            IsAvailable = true,
                            Location = "Building 4, Floor 1",
                            Name = "Workshop Space D"
                        });
                });

            modelBuilder.Entity("Final_Project_Group_10.Models.Booking", b =>
                {
                    b.HasOne("Final_Project_Group_10.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Final_Project_Group_10.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
